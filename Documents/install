#!/bin/bash

# Define Stuff
GREEN="$(tput setaf 2)[OK]$(tput sgr0)"
RED="$(tput setaf 1)[ERROR]$(tput sgr0)"
YELLOW="$(tput setaf 3)[NOTE]$(tput sgr0)"
CAT="$(tput setaf 6)[ACTION]$(tput sgr0)"
LOG="script.log"

# exit on error
set -e

printf "$(tput setaf 2) Welcome to the my Hyrpland Dotfile installer!\n $(tput sgr0)"

sleep 2

printf "$YELLOW BACKUP YOUR FILES
This script may replace some configs and files!"

sleep 2

printf "\n
$YELLOW  This script will require a password
If you don't want to  enter your password, you can exit now using  CTRL Q or CTRL C \n"

sleep 3

# Check if yay is installed
YAY=/sbin/yay

if [ -f "$YAY" ]; then
    printf "\n%s - Yay, yay was found, moving on.\n" "$GREEN"
else 
    printf "\n%s - yay was NOT found\n" "$YELLOW"
    read -n1 -rep "${CAT} Install yay? (y,n)" INST
    if [[ $INST =~ ^[Yy]$ ]]; then
        git clone https://aur.archlinux.org/yay.git
        cd yay
        makepkg -si --noconfirm 2>&1 | tee -a $LOG
        cd ..
    else
        printf "%s - yay is need. Bye\n" "$RED"
        exit
    fi
# update system
    printf "${YELLOW} System Update\n" 
    yay -Syu --noconfirm 2>&1 | tee -a $LOG
fi

# print error messages
print_error() {
    printf " %s%s\n" "$RED" "$1" "$NC" >&2
}

#  print success messages
print_success() {
    printf "%s%s%s\n" "$GREEN" "$1" "$NC"
}


### Install packages ####
read -n1 -rep "${CAT} Would you like to install the packages? (y/n)" inst
echo

if [[ $inst =~ ^[Nn]$ ]]; then
    printf "${YELLOW} No packages installed. \n"
            
        fi

if [[ $inst =~ ^[Yy]$ ]]; then
   git_pkgs=" grimblast-git hyprpicker-git polkit-gnome ppfetch-git sddm-git sddm-theme-corners-git waybar-git"
   hypr_pkgs="hyprland wl-clipboard wf-recorder rofi wlogout waybar-updates swaylock-effects dunst swww kitty swayidle thunar thunar-archive-plugin thunar-media-tags-plugin "    
   font_pkgs="ttf-nerd-fonts-symbols-common otf-firamono-nerd inter-font otf-sora ttf-fantasque-nerd noto-fonts noto-fonts-emoji ttf-comfortaa"
   font_pkgs2="ttf-material-design-icons-extended ttf-jetbrains-mono-nerd ttf-icomoon-feather ttf-iosevka-nerd adobe-source-code-pro-fonts"
   app_pkgs="nwg-look-bin qt5ct btop jq gvfs ffmpegthumbs swww playerctl pamixer noise-suppression-for-voice"
   app_pkgs2="polkit-gnome ffmpeg  pavucontrol ffmpegthumbnailer tumbler xdg-user-dirs bc blueberry boost brave-bin checkupdates-with-aur etcher-bin feh file-roller fuse2 fzf gdu libqalculate light lolcat lsd lxqt-archiver man-db micro neofetch network-manager-applet networkmanager nlohmann-json openrgb plasma-browser-integration pulseaudio python-pipx python-requests qt5-graphicaleffects qt5-quickcontrols2 ranger ripgrep socat sox timeshift transmission-gtk unzip wget xclip xorg-xkill"
   theme_pkgs="nordic-theme catppuccin-cursors-mocha candy-icons-git"

    

    if ! yay -S --noconfirm $git_pkgs $hypr_pkgs $font_pkgs $font_pkgs2 $app_pkgs $app_pkgs2 $theme_pkgs 2>&1 | tee -a $LOG; then
        print_error " Failed to install additional packages - please check the script.log \n"
        exit 1
    fi
    xdg-user-dirs-update
    echo
    print_success " All necessary packages installed successfully."

else
    echo
    print_error " Packages not installed - please check the scipt.log"
    sleep 1
fi


### Copy Config Files ###
read -n1 -rep "${CAT} Would you like to copy files? (y,n)" CFG
if [[ $CFG =~ ^[Yy]$ ]]; then
    printf " Copying config files...\n"
    cp -r .config/dunst ~/.config/ 2>&1 | tee -a $LOG
    cp -r .config/hypr ~/.config/ 2>&1 | tee -a $LOG
    cp -r .config/kitty ~/.config/ 2>&1 | tee -a $LOG
    cp -r .config/Thunar ~/.config/ 2>&1 | tee -a $LOG
    cp -r .config/rofi ~/.config/ 2>&1 | tee -a $LOG
    cp -r .config/swaylock ~/.config/ 2>&1 | tee -a $LOG
    cp -r .config/waybar ~/.config/ 2>&1 | tee -a $LOG
    cp -r .config/wlogout ~/.config/ 2>&1 | tee -a $LOG
    cp -r .config/bash ~/.config/ 2>&1 | tee -a $LOG
    cp -r .config/btop ~/.config/ 2>&1 | tee -a $LOG
    cp -r .config/micro ~/.config/ 2>&1 | tee -a $LOG   
    cp -r .bashrc ~/ 2>&1 | tee -a $LOG
    cp -r .local/ ~/.local/ 2>&1 | tee -a $LOG
    cp -r Documents/bin/*  ~/Documents 2>&1 | tee -a $LOG
    
    # Set some files as exacutable 
    chmod +x ~/Documents/launch
    chmod +x ~/Documents/nightly.sh
    chmod +x ~/Documents/record-script-fullscreen.sh
    chmod +x ~/Documents/record-script.sh
fi
fc-cache -rv  

### Enable SDDM Autologin ###
read -n1 -rep 'Would you like to enable SDDM autologin? (y,n)' SDDM
if [[ $SDDM == "Y" || $SDDM == "y" ]]; then
    LOC="/etc/sddm.conf"
    echo -e "The following has been added to $LOC.\n"
    echo -e "[Autologin]\nUser = $(whoami)\nSession=hyprland" | sudo tee -a $LOC
    echo -e "\n"
    echo -e "Enabling SDDM service...\n"
    sudo systemctl enable sddm
    sleep 3
fi

### Enable SDDM Autologin ###
read -n1 -rep 'Would you like to enable SDDM and set the theme? (y,n)' SDDM
if [[ $SDDM == "Y" || $SDDM == "y" ]]; then
    LOC="/etc/sddm.conf"
    echo -e "The following has been added to $LOC.\n"
    echo -e "[Theme]\nThemeDir=/usr/share/sddm/themes \nCurrent=corners" | sudo tee -a $LOC
    echo -e "\n"
    echo -e "Enabling SDDM service...\n"
    sudo systemctl enable sddm
    sleep 3
fi

### Enable BLE ###
read -n1 -rep 'Would you like to install ble.sh? (y,n)' BLE
if [[ $BLE == "Y" || $BLE == "y" ]]; then
    echo -e "Installing ble.sh.\n"
    git clone --recursive --depth 1 --shallow-submodules https://github.com/akinomyoga/ble.sh.git
    make -C ble.sh install PREFIX=~/.local
    sleep 3
fi

# BLUETOOTH
read -n1 -rep "${CAT} OPTIONAL - Would you like to install Bluetooth packages? (y/n)" BLUETOOTH
if [[ $BLUETOOTH =~ ^[Yy]$ ]]; then
    printf " Installing Bluetooth Packages...\n"
 blue_pkgs="bluez bluez-utils blueman"
    if ! yay -S --noconfirm $blue_pkgs 2>&1 | tee -a $LOG; then
       	print_error "Failed to install bluetooth packages - please check the script.log"    
    printf " Activating Bluetooth Services...\n"
    sudo systemctl enable --now bluetooth.service
    sleep 2
    fi
else
    printf "${YELLOW} No bluetooth packages installed..\n"
	fi

    
### Script is done ###
printf "\n${GREEN} Installation Completed.\n"
echo -e "${GREEN} You can start Hyprland by typing Hyprland (note the capital H).\n"
read -n1 -rep "${CAT} Would you like to start Hyprland now? (y,n)" HYP
if [[ $HYP =~ ^[Yy]$ ]]; then
    if command -v Hyprland >/dev/null; then
        exec Hyprland
    else
         print_error " Hyprland not found. Please make sure Hyprland is installed by checking script.log.\n"
        exit 1
    fi
else
    exit
fi
